# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检查并拉取代码
        uses: actions/checkout@v4

      # Cache all maven dependencies to speed up the workflow
      - name: 设置 JDK 17 环境
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Maven 构建 jar 包
        # 需要跳过测试，要不就提供测试数据库
        run: mvn -f pom.xml clean package -Dmaven.test.skip=true

      - name: 展示 target 目录
        run: ls -la target

      - name: 构建 Docker 镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:latest

      - name: 登录 docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 推送镜像到 docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:latest